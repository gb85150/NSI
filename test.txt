# Generated by https://quicktype.io

from typing import Optional, List


class TabParam:
    libelle: str
    url: str

    def __init__(self, libelle: str, url: str) -> None:
        self.libelle = libelle
        self.url = url


class Params:
    numero_badge: Optional[int]
    is_actif: Optional[int]
    can_parents_lire_messages_enfants: Optional[int]
    dest_admin: Optional[int]
    dest_eleve: Optional[int]
    dest_famille: Optional[int]
    dest_prof: Optional[int]
    dest_esp_travail: Optional[int]
    disabled_notification: Optional[int]
    notification_email_etablissement: Optional[int]
    choix_mail_notification: Optional[int]
    autre_mail_notification: Optional[str]
    mail_pro: Optional[str]
    mail_perso: Optional[str]
    messagerie_api_version: Optional[str]
    black_list_prof_active: Optional[int]
    est_en_black_list: Optional[int]
    afficher_toutes_les_classes: Optional[int]
    documents_notes_actif: Optional[int]
    documents_vs_actif: Optional[int]
    documents_administratif_actif: Optional[int]
    compte_rendu_seance: Optional[int]
    compte_rendu_seance_previsionnel: Optional[int]
    is_cdt_primaire: Optional[int]
    regime: Optional[str]
    repasmidi_1: Optional[int]
    repassoir_1: Optional[int]
    repasmidi_2: Optional[int]
    repassoir_2: Optional[int]
    repasmidi_3: Optional[int]
    repassoir_3: Optional[int]
    repasmidi_4: Optional[int]
    repassoir_4: Optional[int]
    repasmidi_5: Optional[int]
    repassoir_5: Optional[int]
    repasmidi_6: Optional[int]
    repassoir_6: Optional[int]
    repasmidi_7: Optional[int]
    repassoir_7: Optional[int]
    affichage_menu_seul: Optional[int]
    tab_params: Optional[List[TabParam]]
    url: Optional[str]
    rne: Optional[str]

    def __init__(self, numero_badge: Optional[int], is_actif: Optional[int], can_parents_lire_messages_enfants: Optional[int], dest_admin: Optional[int], dest_eleve: Optional[int], dest_famille: Optional[int], dest_prof: Optional[int], dest_esp_travail: Optional[int], disabled_notification: Optional[int], notification_email_etablissement: Optional[int], choix_mail_notification: Optional[int], autre_mail_notification: Optional[str], mail_pro: Optional[str], mail_perso: Optional[str], messagerie_api_version: Optional[str], black_list_prof_active: Optional[int], est_en_black_list: Optional[int], afficher_toutes_les_classes: Optional[int], documents_notes_actif: Optional[int], documents_vs_actif: Optional[int], documents_administratif_actif: Optional[int], compte_rendu_seance: Optional[int], compte_rendu_seance_previsionnel: Optional[int], is_cdt_primaire: Optional[int], regime: Optional[str], repasmidi_1: Optional[int], repassoir_1: Optional[int], repasmidi_2: Optional[int], repassoir_2: Optional[int], repasmidi_3: Optional[int], repassoir_3: Optional[int], repasmidi_4: Optional[int], repassoir_4: Optional[int], repasmidi_5: Optional[int], repassoir_5: Optional[int], repasmidi_6: Optional[int], repassoir_6: Optional[int], repasmidi_7: Optional[int], repassoir_7: Optional[int], affichage_menu_seul: Optional[int], tab_params: Optional[List[TabParam]], url: Optional[str], rne: Optional[str]) -> None:
        self.numero_badge = numero_badge
        self.is_actif = is_actif
        self.can_parents_lire_messages_enfants = can_parents_lire_messages_enfants
        self.dest_admin = dest_admin
        self.dest_eleve = dest_eleve
        self.dest_famille = dest_famille
        self.dest_prof = dest_prof
        self.dest_esp_travail = dest_esp_travail
        self.disabled_notification = disabled_notification
        self.notification_email_etablissement = notification_email_etablissement
        self.choix_mail_notification = choix_mail_notification
        self.autre_mail_notification = autre_mail_notification
        self.mail_pro = mail_pro
        self.mail_perso = mail_perso
        self.messagerie_api_version = messagerie_api_version
        self.black_list_prof_active = black_list_prof_active
        self.est_en_black_list = est_en_black_list
        self.afficher_toutes_les_classes = afficher_toutes_les_classes
        self.documents_notes_actif = documents_notes_actif
        self.documents_vs_actif = documents_vs_actif
        self.documents_administratif_actif = documents_administratif_actif
        self.compte_rendu_seance = compte_rendu_seance
        self.compte_rendu_seance_previsionnel = compte_rendu_seance_previsionnel
        self.is_cdt_primaire = is_cdt_primaire
        self.regime = regime
        self.repasmidi_1 = repasmidi_1
        self.repassoir_1 = repassoir_1
        self.repasmidi_2 = repasmidi_2
        self.repassoir_2 = repassoir_2
        self.repasmidi_3 = repasmidi_3
        self.repassoir_3 = repassoir_3
        self.repasmidi_4 = repasmidi_4
        self.repassoir_4 = repassoir_4
        self.repasmidi_5 = repasmidi_5
        self.repassoir_5 = repassoir_5
        self.repasmidi_6 = repasmidi_6
        self.repassoir_6 = repassoir_6
        self.repasmidi_7 = repasmidi_7
        self.repassoir_7 = repassoir_7
        self.affichage_menu_seul = affichage_menu_seul
        self.tab_params = tab_params
        self.url = url
        self.rne = rne


class Module:
    code: str
    enable: bool
    ordre: int
    badge: int
    params: Params

    def __init__(self, code: str, enable: bool, ordre: int, badge: int, params: Params) -> None:
        self.code = code
        self.enable = enable
        self.ordre = ordre
        self.badge = badge
        self.params = params


class ParametresIndividuels:
    lsu_poil_dans_la_main_borne1: str
    lsu_poil_dans_la_main_borne2: str
    lsu_poil_dans_la_main_borne3: str
    mode_calcul_lsu: str
    is_qrcode: bool
    mode_accessibilite_visuelle: bool
    type_saisie_notes_defaut: str
    nb_jours_max_rendu_devoir_cdt: str
    type_view_cdt_defaut: str

    def __init__(self, lsu_poil_dans_la_main_borne1: str, lsu_poil_dans_la_main_borne2: str, lsu_poil_dans_la_main_borne3: str, mode_calcul_lsu: str, is_qrcode: bool, mode_accessibilite_visuelle: bool, type_saisie_notes_defaut: str, nb_jours_max_rendu_devoir_cdt: str, type_view_cdt_defaut: str) -> None:
        self.lsu_poil_dans_la_main_borne1 = lsu_poil_dans_la_main_borne1
        self.lsu_poil_dans_la_main_borne2 = lsu_poil_dans_la_main_borne2
        self.lsu_poil_dans_la_main_borne3 = lsu_poil_dans_la_main_borne3
        self.mode_calcul_lsu = mode_calcul_lsu
        self.is_qrcode = is_qrcode
        self.mode_accessibilite_visuelle = mode_accessibilite_visuelle
        self.type_saisie_notes_defaut = type_saisie_notes_defaut
        self.nb_jours_max_rendu_devoir_cdt = nb_jours_max_rendu_devoir_cdt
        self.type_view_cdt_defaut = type_view_cdt_defaut


class Classe:
    id: int
    code: str
    libelle: str
    est_note: int

    def __init__(self, id: int, code: str, libelle: str, est_note: int) -> None:
        self.id = id
        self.code = code
        self.libelle = libelle
        self.est_note = est_note


class Profile:
    sexe: str
    info_edt: str
    nom_etablissement: str
    id_etablissement: int
    rne_etablissement: str
    tel_portable: str
    id_reel_etab: int
    photo: str
    classe: Classe

    def __init__(self, sexe: str, info_edt: str, nom_etablissement: str, id_etablissement: int, rne_etablissement: str, tel_portable: str, id_reel_etab: int, photo: str, classe: Classe) -> None:
        self.sexe = sexe
        self.info_edt = info_edt
        self.nom_etablissement = nom_etablissement
        self.id_etablissement = id_etablissement
        self.rne_etablissement = rne_etablissement
        self.tel_portable = tel_portable
        self.id_reel_etab = id_reel_etab
        self.photo = photo
        self.classe = classe


class Account:
    id_login: int
    id: int
    uid: str
    identifiant: str
    type_compte: str
    code_ogec: str
    main: bool
    last_connexion: str
    civilite: str
    prenom: str
    particule: str
    nom: str
    email: str
    annee_scolaire_courante: str
    nom_etablissement: str
    logo_etablissement: str
    couleur_agenda_etablissement: str
    dico_en_ligne_le_robert: bool
    socket_token: str
    modules: List[Module]
    parametres_individuels: ParametresIndividuels
    profile: Profile

    def __init__(self, id_login: int, id: int, uid: str, identifiant: str, type_compte: str, code_ogec: str, main: bool, last_connexion: str, civilite: str, prenom: str, particule: str, nom: str, email: str, annee_scolaire_courante: str, nom_etablissement: str, logo_etablissement: str, couleur_agenda_etablissement: str, dico_en_ligne_le_robert: bool, socket_token: str, modules: List[Module], parametres_individuels: ParametresIndividuels, profile: Profile) -> None:
        self.id_login = id_login
        self.id = id
        self.uid = uid
        self.identifiant = identifiant
        self.type_compte = type_compte
        self.code_ogec = code_ogec
        self.main = main
        self.last_connexion = last_connexion
        self.civilite = civilite
        self.prenom = prenom
        self.particule = particule
        self.nom = nom
        self.email = email
        self.annee_scolaire_courante = annee_scolaire_courante
        self.nom_etablissement = nom_etablissement
        self.logo_etablissement = logo_etablissement
        self.couleur_agenda_etablissement = couleur_agenda_etablissement
        self.dico_en_ligne_le_robert = dico_en_ligne_le_robert
        self.socket_token = socket_token
        self.modules = modules
        self.parametres_individuels = parametres_individuels
        self.profile = profile


class DataData:
    accounts: List[Account]

    def __init__(self, accounts: List[Account]) -> None:
        self.accounts = accounts


class DataEdData:
    code: int
    token: str
    message: str
    data: DataData

    def __init__(self, code: int, token: str, message: str, data: DataData) -> None:
        self.code = code
        self.token = token
        self.message = message
        self.data = data


class DataEd:
    data: DataEdData
    user_accounts_token: str

    def __init__(self, data: DataEdData, user_accounts_token: str) -> None:
        self.data = data
        self.user_accounts_token = user_accounts_token
